# Copyright 2009-2025 David Hadka
# 
# This file is part of the MOEA Framework.
# 
# The MOEA Framework is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by 
# the Free Software Foundation, either version 3 of the License, or (at your 
# option) any later version.
# 
# The MOEA Framework is distributed in the hope that it will be useful, but 
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public 
# License for more details.
# 
# You should have received a copy of the GNU Lesser General Public License 
# along with the MOEA Framework.  If not, see <http://www.gnu.org/licenses/>.

# This file contains the default English strings used in the tools
# package.  To create a translation into Spanish, for example, copy this file to
# LocalStrings_es.properties and replace the strings with their translation.

CalculateIndicator.description = Calculates the indicator value for an approximation set.
CalculateIndicator.option.problem = Problem name
CalculateIndicator.option.indicator = The name of the indicator (e.g., hypervolume)
CalculateIndicator.option.reference = Reference set file
CalculateIndicator.option.epsilon = Epsilon values for epsilon-dominance
CalculateIndicator.option.output = Output file

DataStoreTool.description = Access content of a data store.
DataStoreTypeCommand.description = Display the type of the given URI
DataStoreListCommand.description = List the contents of the data store or container
DataStoreDetailsCommand.description = Show details of data store, container, or blob
DataStoreExistsCommand.description = Checks if the data store, container, or blob exists
DataStoreGetCommand.description = Gets the content of the blob
DataStoreGetCommand.option.output = The output file
DataStoreSetCommand.description = Sets the content of the blob
DataStoreSetCommand.option.input = The input file
DataStoreDeleteCommand.description = Deletes the data store, container, or blob
DataStoreDeleteCommand.option.yes = Confirm the deletion without prompting the user
DataStoreServerCommand.description = Starts a web server providing read-only access
DataStoreServerCommand.option.hostname = The server hostname
DataStoreServerCommand.option.port = The server port
DataStoreServerCommand.option.path = The path the data store is hosted from
DataStoreLockCommand.description = Locks the data store, allowing read-only operations
DataStoreUnlockCommand.description = Unlocks the data store, allowing read and write operations

EndOfRunEvaluator.description = Evaluates an optimization algorithm on the specified problem, storing end-of-run approximation sets.
EndOfRunEvaluator.option.parameterFile = Parameter description file
EndOfRunEvaluator.option.input = Parameter samples
EndOfRunEvaluator.option.output = Output file
EndOfRunEvaluator.option.problem = Problem name
EndOfRunEvaluator.option.algorithm = Algorithm name
EndOfRunEvaluator.option.properties = Fixed algorithm properties
EndOfRunEvaluator.option.seed = Random number seed
EndOfRunEvaluator.option.epsilon = Epsilon values for epsilon-dominance
EndOfRunEvaluator.option.metrics = Evaluate and output metrics
EndOfRunEvaluator.option.reference = Reference set file
EndOfRunEvaluator.option.force = Continue processing if the file timestamp check fails
EndOfRunEvaluator.option.overwrite = Overwrite the output file if it exists

Initialize.description = Displays commands to configure the MOEA Framework CLI on this system.
Initialize.option.permanent = Make changes permanent; since this updates your system configuration, we recommend creating a backup first
Initialize.option.shell = The name of the shell ("pwsh", "cmd", "bash", "zsh")

Main.description = MOEA Framework: A Free and Open Source Java Framework for Multiobjective Optimization
Main.option.version = Displays the version
Main.option.info = Displays information about the system for debugging
Main.option.verbose = Enable verbose logging, useful when diagnosing errors

MetricsAnalysis.description = Calculates the best, attainment, efficiency and controllability metrics.
MetricsAnalysis.option.parameterFile = Parameter file
MetricsAnalysis.option.parameters = Parameter samples
MetricsAnalysis.option.metric = Column in metric file to evaluate
MetricsAnalysis.option.hypervolume = Ideal or target hypervolume
MetricsAnalysis.option.output = Output file
MetricsAnalysis.option.efficiency = Include efficiency calculation
MetricsAnalysis.option.band = NFE band width for calculating efficiency
MetricsAnalysis.option.controllability = Include controllability calculation
MetricsAnalysis.option.threshold = Attainment threshold

MetricsEvaluator.description = Evaluates the approximation sets stored in a result file, outputting a metric file containing the hypervolume, generational distance, inverted generational distance, spacing, additive epsilon-indicator, and maximum Pareto front error performance indicators.
MetricsEvaluator.option.problem = Problem name
MetricsEvaluator.option.epsilon = Epsilon values for epsilon-dominance
MetricsEvaluator.option.input = Input result file
MetricsEvaluator.option.output = Output metric file
MetricsEvaluator.option.reference = Reference set file
MetricsEvaluator.option.force = Continue processing if the file timestamp check fails
MetricsEvaluator.option.overwrite = Overwrite the output file if it exists

MetricsValidator.description = Validates the number of rows stored in a metrics file.
MetricsValidator.option.count = The expected number of rows
MetricsValidator.option.output = Output file

ReferenceSetGenerator.description = Generates a reference set for any problem whose analytical solution is known.
ReferenceSetGenerator.option.problem = Problem name
ReferenceSetGenerator.option.numberOfPoints = Number of points to generate
ReferenceSetGenerator.option.seed = Random number seed
ReferenceSetGenerator.option.output = Output file
ReferenceSetGenerator.option.epsilon = Epsilon values for epsilon-dominance

ResultFileConverter.description = Converts a result file into a different file format.
ResultFileConverter.option.problem = Problem name
ResultFileConverter.option.format = The output file format (Plaintext, Markdown, Latex, CSV, ARFF)
ResultFileConverter.option.input = Input file
ResultFileConverter.option.output = Output file

ResultFileMerger.description = Merges the approximation sets contained in one or more result files to produce the combined reference set.
ResultFileMerger.option.problem = Problem name
ResultFileMerger.option.output = Output file containing the merged set
ResultFileMerger.option.epsilon = Epsilon values for epsilon-dominance

ResultFileMetadata.description = Extracts metadata and/or performance metrics from a result file.
ResultFileMetadata.option.problem = Problem name
ResultFileMetadata.option.input = Input file
ResultFileMetadata.option.output = Output file
ResultFileMetadata.option.reference = Reference set file
ResultFileMetadata.option.epsilon = Epsilon values for epsilon-dominance
ResultFileMetadata.option.format = The output file format (Plaintext, Markdown, Latex, CSV, ARFF)

ResultFileSeedMerger.description = Merges the approximation sets contained in one or more result files across each seed, where each result file is generated by a different seed.  Unlike ResultFileMerger that merges all approximation sets into one reference set, this utility merges each entry across its seeds.  The output will contain N approximation sets if the inputs all contain N approximation sets.
ResultFileSeedMerger.option.problem = Problem name
ResultFileSeedMerger.option.output = Output file
ResultFileSeedMerger.option.epsilon = Epsilon values for epsilon-dominance

ResultFileValidator.description = Validates the number of approximation sets stored in a result file.
ResultFileValidator.option.count = The expected number of entries
ResultFileValidator.option.problem = Problem name
ResultFileValidator.option.output = Output file

ResultFileViewer.description = Visualizes the contents of a result file.
ResultFileViewer.option.problem = Problem name
ResultFileViewer.option.reference = Reference set file

RuntimeEvaluator.description = Records the approximation set at a fixed sampling frequency from each parameterization.
RuntimeEvaluator.option.parameterFile = Parameter description file
RuntimeEvaluator.option.input = Parameter samples
RuntimeEvaluator.option.output = Output file name format with %d replaced by the run index (e.g., result_%d.dat)
RuntimeEvaluator.option.problem = Problem name
RuntimeEvaluator.option.algorithm = Algorithm name
RuntimeEvaluator.option.properties = Fixed algorithm properties
RuntimeEvaluator.option.seed = Random number seed
RuntimeEvaluator.option.epsilon = Epsilon values for epsilon-dominance
RuntimeEvaluator.option.frequency = The sampling frequency in function evaluations

SampleGenerator.description = Generates parameter samples for running the Evaluator.
SampleGenerator.option.numberOfSamples = Number of samples
SampleGenerator.option.parameterFile = Parameter file
SampleGenerator.option.method = Sample generation method (uniform, latin, sobol, saltelli)
SampleGenerator.option.seed = Random number generator seed
SampleGenerator.option.output = Output file
SampleGenerator.option.overwrite = Overwrite the output file if it exists

SobolAnalysis.description = Performs Sobol' global variance analysis.
SobolAnalysis.option.parameterFile = Parameter description file
SobolAnalysis.option.input = Model output file
SobolAnalysis.option.metric = Column in model output to evaluate
SobolAnalysis.option.output = Output file
SobolAnalysis.option.resamples = Number of resamples when computing bootstrap confidence intervals

Solve.description = Solves an optimization problem using any optimization algorithm supported by the MOEA Framework.
Solve.option.algorithm = Algorithm name
Solve.option.problem = Problem name
Solve.option.objectives = Number of objectives
Solve.option.constraints = Number of constraints (default 0)
Solve.option.numberOfEvaluations = Maximum number of evaluations
Solve.option.epsilon = Epsilon values for epsilon-dominance
Solve.option.output = Output file
Solve.option.runtimeFrequency = Output population every N evaluations (default 100)
Solve.option.hostname = Hostname used when using sockets (default localhost)
Solve.option.port = Port used when using sockets (default 16801)
Solve.option.retries = The number of retries when establishing a socket connection (default 5)
Solve.option.seed = Random number seed
Solve.option.useSocket = Communicate with external problem using sockets
Solve.option.test = Runs a few trials to test the connection with the external problem
Solve.option.lowerBounds = Lower bounds of real-valued decision variables
Solve.option.upperBounds = Upper bounds of real-valued decision variables
Solve.option.variables = Semicolon-separated list of decision variable specifications.  Use "R(<lb>,<ub>)" for reals, "B(<length>)" for binary, "I(<lb>,<ub>)" for integers, "P(<length>)" for permutations
Solve.option.properties = Algorithm properties

WeightGenerator.description = Outputs randomly-generated weights.
WeightGenerator.option.numberOfSamples = Number of samples
WeightGenerator.option.dimension = Dimension (typically the number of objectives)
WeightGenerator.option.method = The sampling method (random, uniformdesign, normalboundaryintersection)
WeightGenerator.option.divisions = Number of divisions used for NBI weights (for single layer)
WeightGenerator.option.divisionsInner = Number of inner divisions used for NBI weights (for two layers)
WeightGenerator.option.divisionsOuter = Number of outer divisions used for NBI weights (for two layers)
WeightGenerator.option.seed = Random number generator seed
WeightGenerator.option.output = Output file
WeightGenerator.option.generalized = Convert the weights using Generalized Decomposition (GD)
