<?xml version="1.0"?>
<!--
Copyright 2009-2024 David Hadka

This file is part of the MOEA Framework.

The MOEA Framework is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by 
the Free Software Foundation, either version 3 of the License, or (at your 
option) any later version.

The MOEA Framework is distributed in the hope that it will be useful, but 
WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public 
License for more details.

You should have received a copy of the GNU Lesser General Public License 
along with the MOEA Framework.  If not, see <http://www.gnu.org/licenses/>.



Use of these build scripts requires Apache Ant to be installed.  See
<http://ant.apache.org/> for instructions on installing Apache Ant.
-->
<project name="MOEA Framework" basedir="." xmlns:if="ant:if" xmlns:unless="ant:unless">
	
	<import file="src/macros.xml" />

	<!-- Loads properties from properties file and environment -->
	<property file="META-INF/build.properties" />
	<property environment="env" />
	
	<!-- The working folder for these Ant build targets -->
	<property name="build" value="build" />
	
	<!-- The folder where compiled files ready for distribution are saved -->
	<property name="dist" value="dist" />
	
	<!-- The folder where generated javadoc files are saved -->
	<property name="javadoc" value="javadoc" />
	
	<!-- The base/root folder for organizing distributions -->
	<property name="base" value="${build}/${shortname}-${version}" />

	<!-- Classpath of third-party libraries used by the MOEA Framework -->
	<path id="classpath">
		<fileset dir="lib" includes="*.jar" />
	</path>

	<!-- List of files required in every distribution -->
	<path id="requiredfiles">
		<fileset file="README.md" />
		<fileset file="COPYING" />
	</path>
	
	<!-- List of libraries included in every distribution -->
	<path id="libraries">
		<fileset dir="lib" excludes="junit-*.jar,hamcrest-*.jar,jfreesvg-*.jar,checkstyle-*.jar,nashorn-*.jar,asm-*.jar,jmetal-plugin-*.jar,pisa-plugin-*.jar,gd-*.jar" />
	</path>
	
	<path id="resources">
		<fileset dir="src" excludes="**/*.java,overview.html,cli.cmd,cli.sh,macros.xml,pom.xml.template,README.md.template" />
	</path>

	<!-- Generates the Javadoc webpages -->
	<target name="build-javadoc">
		<delete dir="${javadoc}" />
		<mkdir dir="${javadoc}" />
		
		<javadoc sourcepath="src"
				source="${java.major}"
				destdir="${javadoc}"
				packagenames="org.moeaframework.*"
				noindex="true"
				nohelp="true"
				notree="true"
				overview="src/overview.html"
				windowtitle="${name} ${version} API">
			<header><![CDATA[${name} ${version}<br />API Specification]]></header>
			<doctitle><![CDATA[${name} ${version}<br />API Specification]]></doctitle>
			<bottom><![CDATA[${copyright}<br />Licensed under the <a href=\"http://www.gnu.org/licenses/lgpl.html\">GNU Lesser General Public License</a>.<br />Return to the <a href=\"${website}\" target=\"_top\">MOEA Framework homepage</a>.]]></bottom>
			<classpath>
				<path refid="classpath" />
			</classpath>
			<arg value="-notimestamp" />
		</javadoc>
	</target>

	<!-- Builds the MOEA Framework JAR file -->
	<target name="build-binary">
		<tstamp />

		<delete dir="${build}" />
		<mkdir dir="${build}" />
		
		<fail message="Missing or invalid version of JAR file">
		    <condition>
		    	<not>
		    		<and>
		    			<available file="lib/commons-cli-${commons-cli.version}.jar" />
		    			<available file="lib/commons-io-${commons-io.version}.jar" />
		    			<available file="lib/commons-text-${commons-text.version}.jar" />
		    			<available file="lib/commons-lang3-${commons-lang3.version}.jar" />
		    			<available file="lib/commons-math3-${commons-math3.version}.jar" />
		    			<available file="lib/jcommon-${jcommon.version}.jar" />
		    			<available file="lib/jfreechart-${jfreechart.version}.jar" />
		    			<available file="lib/jna-${jna.version}.jar" />
		    		</and>
		    	</not>
		    </condition>
		</fail>

		<javac destdir="${build}" srcdir="src" debug="${java.debug}" release="${java.major}"
				excludes="**/package-info.java" includeantruntime="false" encoding="UTF-8">
			<classpath refid="classpath" />
		</javac>

		<copy todir="${build}/META-INF">
			<fileset dir="META-INF" excludes="ZHANG-LICENSE" />
			<path refid="requiredfiles" />
		</copy>
		
		<exec executable="git" outputproperty="impl.version" errorproperty="impl.error" failifexecutionfails="false">
			<arg value="rev-parse" />
			<arg value="--short" />
			<arg value="HEAD" />
		</exec>
		
		<property name="impl.version" value="Undefined" />
		
		<manifest file="${build}/META-INF/MANIFEST.MF">
			<section name="org/moeaframework/">
				<attribute name="Specification-Title" value="${name}" />
				<attribute name="Specification-Version" value="${version}" />
				<attribute name="Specification-Vendor" value="${website}" />
				<attribute name="Implementation-Title" value="org.moeaframework" />
				<attribute name="Implementation-Version" value="${impl.version}" />
				<attribute name="Implementation-Vendor" value="${website}" />
			</section>
		</manifest>

		<copy todir="${build}" includeEmptyDirs="false">
			<path refid="resources" />
		</copy>

		<jar basedir="${build}" manifest="${build}/META-INF/MANIFEST.MF"
				jarfile="${dist}/${shortname}-${version}.jar" />
	</target>
	
	<!-- Update the lib/ folder and .classpath file with the latest versions from build.properties -->
	<target name="update-libraries">
		<delete dir="lib" />
		<mkdir dir="lib" />
		
		<secure-get src="${commons-cli.url}" dest="lib/commons-cli-${commons-cli.version}.jar" sha1="${commons-cli.sha1}" />
		<secure-get src="${commons-io.url}" dest="lib/commons-io-${commons-io.version}.jar" sha1="${commons-io.sha1}" />
		<secure-get src="${commons-lang3.url}" dest="lib/commons-lang3-${commons-lang3.version}.jar" sha1="${commons-lang3.sha1}" />
		<secure-get src="${commons-math3.url}" dest="lib/commons-math3-${commons-math3.version}.jar" sha1="${commons-math3.sha1}" />
		<secure-get src="${commons-text.url}" dest="lib/commons-text-${commons-text.version}.jar" sha1="${commons-text.sha1}" />
		<secure-get src="${jcommon.url}" dest="lib/jcommon-${jcommon.version}.jar" sha1="${jcommon.sha1}" />
		<secure-get src="${jfreechart.url}" dest="lib/jfreechart-${jfreechart.version}.jar" sha1="${jfreechart.sha1}" />
		<secure-get src="${jna.url}" dest="lib/jna-${jna.version}.jar" sha1="${jna.sha1}" />
		
		<replaceregexp file=".classpath" match="lib/([a-zA-Z0-9]+(-[a-zA-Z0-9]+)?)-[0-9]+\.[0-9]+\.([0-9]+)?\.jar"
			replace="lib/\1-%\1.version%.jar" byline="true" />
		
		<replace-properties file=".classpath" />
	</target>
	
	<!-- Updates README.md from the template -->
	<target name="update-readme">
		<copy file="src/README.md.template" tofile="README.md" overwrite="true" />
		
		<replace file="README.md" token="%carousel%" value="" />
		<replace-properties file="README.md" />
	</target>
	
	<!-- Updates code samples used in the docs -->
	<target name="update-docs" depends="build-binary,update-readme">
		<java classname="org.moeaframework.util.io.UpdateCodeSamples" fork="true" failonerror="true">
			<classpath refid="classpath" />
			<classpath path="${build}" />
			<classpath path="examples" />
			<arg value="--update" />
		</java>
	</target>
	
	<!-- Validates code samples used in the docs -->
	<target name="validate-docs" depends="build-binary">
		<java classname="org.moeaframework.util.io.UpdateCodeSamples" fork="true" failonerror="true">
			<classpath refid="classpath" />
			<classpath path="${build}" />
			<classpath path="examples" />
		</java>
	</target>

	<!-- Packages the MOEA Framework JAR file along with javadocs and required files -->
	<target name="package-binary" depends="build-binary, build-javadoc"
			description="Creates the binary distribution file">
		<delete dir="${build}" />
		<mkdir dir="${base}" />
		<mkdir dir="${base}/docs" />
		<mkdir dir="${base}/lib" />
		<mkdir dir="${base}/pf" />
		<mkdir dir="${base}/licenses" />
		<mkdir dir="${base}/examples" />
		
		<copy todir="${base}">
			<path refid="requiredfiles" />
			<fileset file="moeaframework.properties" />
			<fileset file="src/cli.cmd" />
			<fileset file="src/cli.sh" />
		</copy>
		
		<move file="${base}/cli.sh" tofile="${base}/cli" />

		<copy todir="${base}/licenses">
			<fileset dir="META-INF" includes="*-LICENSE" excludes="ZHANG-LICENSE" />
		</copy>
		
		<copy todir="${base}/docs">
			<fileset dir="docs" />
		</copy>

		<copy todir="${base}/lib">
			<fileset file="${dist}/${shortname}-${version}.jar" />
			<path refid="libraries" />
		</copy>

		<copy todir="${base}/pf">
			<fileset dir="pf" excludes="referenceHypervolume" />
		</copy>

		<copy todir="${base}/javadoc">
			<fileset dir="${javadoc}" />
		</copy>
		
		<copy todir="${base}/examples">
			<fileset dir="examples" excludes="*.exe,*.o,*.a,*.class" />
		</copy>
		
		<chmod perm="+x" type="file" verbose="true">
			<fileset dir="${base}/examples" includes="**/*.sh" />
			<fileset file="${base}/cli" />
		</chmod>

		<tar destfile="${dist}/${shortname}-${version}.tar.gz" basedir="${build}" compression="gzip" longfile="gnu" />
	</target>

	<!-- Packages the MOEA Framework source code, libraries and required files  -->
	<target name="package-source" description="Creates the source code distribution file">
		<delete dir="${build}" />
		<mkdir dir="${base}" />

		<copy todir="${base}">
			<fileset dir=".">
				<include name=".project" />
				<include name=".classpath" />
				<include name="docs/**" />
				<include name="examples/**" />
				<exclude name="examples/*.exe" />
				<exclude name="examples/*.o" />
				<exclude name="examples/*.a" />
				<include name="META-INF/**" />
				<include name="pf/**" />
				<include name="src/**" />
				<include name="test/**" />
				<exclude name="test/checkstyle/checkstyle-*.jar" />
				<exclude name="test/org/moeaframework/problem/*.exe" />
				<exclude name="test/org/moeaframework/problem/*.o" />
				<exclude name="test/org/moeaframework/problem/*.a" />
				<include name="website/**" />
				<include name="moeaframework.properties" />
				<include name="build.xml" />
				<include name="test.xml" />
			</fileset>
			<path refid="requiredfiles" />
		</copy>
		
		<copy todir="${base}/lib">
			<path refid="libraries" />
		</copy>
		
		<replace file="${base}/.project">
			<replacefilter token="MOEAFramework" value="MOEAFramework-${version}" />
		</replace>
		
		<chmod perm="+x" type="file" verbose="true">
			<fileset dir="${base}/examples" includes="**/*.sh" />
			<fileset dir="${base}/src" includes="**/*.sh" />
			<fileset dir="${base}/test" includes="**/*.sh" />
		</chmod>
		
		<tar destfile="${dist}/${shortname}-${version}-Source.tar.gz" basedir="${build}" compression="gzip"
				longfile="gnu" />
	</target>

	<!-- Builds the website -->
	<target name="package-website" depends="build-javadoc" description="Creates the website">
		<delete dir="${build}" />
		<mkdir dir="${build}" />

		<copy todir="${build}">
			<fileset dir="website" />
		</copy>
		
		<copy file="src/README.md.template" tofile="${build}/index.md" />
		
		<copy todir="${build}/assets/images">
			<fileset file="docs/imgs/runtimeViewer.png" />
			<fileset file="docs/imgs/diagnosticTool.png" />
		</copy>
		
		<copy todir="${build}/javadoc">
			<fileset dir="${javadoc}" />
		</copy>
		
		<replace file="${build}/index.md" token="%carousel%">
		  <replacevalue><![CDATA[
In addition, the MOEA Framework includes a suite of diagnostic and visualization tools:
		  	
{% include carousel.html height="500" unit="px" duration="7" %}]]></replacevalue>
		</replace>
		
		<replace-properties file="${build}/_config.yml" />
		<replace-properties file="${build}/index.md" />
	</target>
	
	<target name="build-maven" description="Creates a Maven version of this project for testing / publishing">
		<delete dir="${build}" />
		<mkdir dir="${build}" />
		
		<mkdir dir="${build}/src/main/java" />
		<mkdir dir="${build}/src/main/resources" />
		<mkdir dir="${build}/src/test/java" />
		<mkdir dir="${build}/src/test/resources" />
		<mkdir dir="${build}/examples" />
		
		<copy file="src/pom.xml.template" tofile="${build}/pom.xml" />
		<replace-properties file="${build}/pom.xml" />
		
		<copy todir="${build}/src/main/resources/META-INF">
			<fileset dir="META-INF" />
			<path refid="requiredfiles" />
		</copy>
		
		<copy todir="${build}/src/main/resources" includeEmptyDirs="false">
			<path refid="resources" />
		</copy>
		
		<copy todir="${build}/src/main/java">
			<fileset dir="src" includes="**/*.java" />
		</copy>
		
		<copy todir="${build}/src/test/java">
			<fileset dir="test" />
		</copy>
		
		<copy todir="${build}/src/test/resources" includeEmptyDirs="false">
			<fileset dir="test" excludes="**/*.java" />
		</copy>
		
		<copy todir="${build}/examples">
			<fileset dir="examples" />
		</copy>
		
		<copy todir="${build}/src/main/resources/pf">
			<fileset dir="pf" />
		</copy>
	</target>
	
	<target name="clean" description="Clean all temporary build files">
		<delete dir="bin" quiet="true" />
		<delete dir="build" quiet="true" />
		<delete dir="dist" quiet="true" />
		<delete dir="javadoc" quiet="true" />
		<delete>
		  	<fileset dir="examples" includes="**/*.class"/>
			<fileset dir="src" includes="**/*.class"/>
			<fileset dir="test" includes="**/*.class"/>
		</delete>
	</target>
	
</project>
